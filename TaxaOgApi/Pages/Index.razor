@page "/"
@using System.Text.Json;


<PageTitle>Index</PageTitle>

<header>
    <span>taxi </span>
    <span>4x27</span>
    <ul>
        <li><NavLink href="/">beregn pris</NavLink></li>
        <li><NavLink href="/1">contrakt</NavLink></li>
        <li><NavLink href="/2">support</NavLink></li>
        <li><NavLink href="/3">om</NavLink></li>
    </ul>
</header>


<html>
<head>
    @*<meta name="referrer" content="no-referrer-when-downgrade">*@
</head>
<body>
    <div class="big-box">
        <div class="rectangle">
            <input class="search-box" type="text" @bind="AddressStart" placeholder="address start" />
            <input class="search-box" type="text" @bind="AddressEnd" placeholder="address slut" />
            <select class="menu-box" @bind="SelectedTime">
                <option value="dag">dag</option>
                <option value="nat">nat</option>
            </select>
            <select class="menu-box" @bind="SelectedCar">
                <option value="Almindelige Vogne">Almindelige Vogne</option>
                <option value="Store Vogne">Store Vogne – minibus</option>
            </select>
        </div>

        <div class="square square1">
            <div class="checkbox-group">
                <p class="text"><strong>Tillæg</strong></p>
                <div class="checkbox-item" for="checkbox1">
                    <label for="Checkbox1">Antal cykler:</label>
                    <input type="number" id="Checkbox1" @bind="Checkbox1" min="0" placeholder="0" style="width: 50px" />
                </div>
                <div class="checkbox-item" for="checkbox2">
                    <input type="checkbox" id="checkbox2" @bind="Checkbox2" value="30" /><label>Opbæring</label>
                </div>
                <div class="checkbox-item" for="checkbox3">
                    <input type="checkbox" id="checkbox3" @bind="Checkbox3" value="15" /><label>Lufthavn</label>
                </div>
                <div class="checkbox-item" for="checkbox4">
                    <input type="checkbox" id="checkbox4" @bind="Checkbox4" value="40" /><label>5-6 passagerer</label>
                </div>
                <div class="checkbox-item" for="checkbox5">
                    <input type="checkbox" id="checkbox5" @bind="Checkbox5" value="350" /><label>Liftvogn</label>
                </div>
                <p class="text"><strong>Køresel over bro</strong></p>
                <div class="checkbox-item" for="checkbox6">
                    <input type="checkbox" id="checkbox6" @bind="Checkbox6" value="350" /><label>Øresund</label>
                </div>
                <div class="checkbox-item" for="checkbox7">
                    <input type="checkbox" id="checkbox7" @bind="Checkbox7" value="540" /><label>Storebæltsbroen</label>
                </div>
                <div class="calculat">
                    <button type="button" @onclick="Calculate">calculate</button>
                </div>
            </div>
        </div>
        <div class="square square2">
            @if (Button)
            {
                <iframe width="50%" height="60%" frameborder="0" style="border:0; padding-top: 10%" allowfullscreen src="@MapUrl"></iframe>

            }
            <p>
                @DistanceResult
            </p>
        </div>
    </div>
</body>
</html>



<style>
    .big-box {
        width: 100%;
        height: 90vh;
        position: relative;
        border: 1px solid black;
        overflow: hidden;
    }

    .rectangle {
        width: 100%;
        height: 25%;
        background-color: #646E78;
        display: flex;
        justify-content: center;
        align-items: center;
        border-bottom: 1px solid black;
    }

    .search-box {
        width: 100%;
        height: 30%;
        margin: 25px;
        border: 1px solid black;
        background-color: white;
    }

    .menu-box {
        width: 100%;
        height: 30%;
        margin: 25px;
    }

    .square {
        height: 100%;
        float: left;
        width: 50%;
    }

    .square1 {
        background-color: #8D98A7;
        border-right: 1px solid black;
    }

    .checkbox-group {
        font-size: 20px;
    }

    .checkbox-item {
        padding-left: 40%;
    }

    .text {
        text-align: center;
        padding-top: 10%;
    }

    .calculat {
        padding-top: 5%;
        text-align: center;
    }

    .square2 {
        background-color: #DCCCBB;
        text-align: center;
        margin: auto;
        display: table;
    }



    header {
        font-size: xx-large;
        border-top: 1px solid black;
        border-left: 1px solid black;
        border-right: 1px solid black;
        padding-left: 10px;
        text-align: center;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        background-color: #8D98A7;
    }

        header span {
            font-size: xx-large;
            color: black;
        }

        header ul {
            list-style-type: none;
            display: flex;
            justify-content: center;
            width: 100%;
            margin-left: -135px;

        }

            header ul li {
                margin-right: 100px
            }
        a{
            color: black;
             text-decoration: none;
              transition: color 1s;
        }

        a:hover{
            color: #DCCCBB;
        }
</style>




@code {
    public string? AddressStart { get; set; }
    public string? AddressEnd { get; set; }
    public string? SelectedTime { get; set; }
    public string? SelectedCar { get; set; }
    public int Checkbox1 { get; set; }
    public bool Checkbox2 { get; set; }
    public bool Checkbox3 { get; set; }
    public bool Checkbox4 { get; set; }
    public bool Checkbox5 { get; set; }
    public bool Checkbox6 { get; set; }
    public bool Checkbox7 { get; set; }
    public bool Button { get; set; }
    public string? MapUrl { get; set; }

    public string? DistanceResult { get; set; }


    [Inject]
    public ApiService ApiService { get; set; }

    public async Task Calculate()
    {

        if (!string.IsNullOrWhiteSpace(AddressStart) && !string.IsNullOrWhiteSpace(AddressEnd))
        {

            double startPrice = 0;
            double pricePerKm = 0;
            double pricePerMin = 0;

            if (SelectedTime == "dag" && SelectedCar == "Almindelige Vogne")
            {
                startPrice = 37;
                pricePerKm = 12.75;
                pricePerMin = 5.75;
            }
            else if (SelectedTime == "nat" && SelectedCar == "Almindelige Vogne")
            {
                startPrice = 47;
                pricePerKm = 16;
                pricePerMin = 7;
            }
            else if (SelectedTime == "dag" && SelectedCar == "Store Vogne")
            {
                startPrice = 77;
                pricePerKm = 17;
                pricePerMin = 5.75;
            }
            else if (SelectedTime == "nat" && SelectedCar == "Store Vogne")
            {
                startPrice = 87;
                pricePerKm = 19;
                pricePerMin = 7;
            }



            double cykelTillæg = 0;
            if (Checkbox1 > 0)
            {
                cykelTillæg = 30 * Checkbox1;
            }

            double opbæringTillæg = Checkbox2 ? 30 : 0;
            double lufthavnTillæg = Checkbox3 ? 15 : 0;
            double passagerTillæg = Checkbox4 ? 40 : 0;
            double liftvognTillæg = Checkbox5 ? 350 : 0;

            double broTillæg = 0;
            if (Checkbox6)
            {
                broTillæg += 350;
            }
            if (Checkbox7)
            {
                broTillæg += 540;
            }



            var response = await ApiService.GetDistance(AddressStart, AddressEnd);
            if (response != null)
            {
                var result = JsonSerializer.Deserialize<GoogleMapsDistanceMatrixResponse>(response);
                string distance = result?.rows?.FirstOrDefault()?.elements?.FirstOrDefault()?.distance?.text;
                string duration = result?.rows?.FirstOrDefault()?.elements?.FirstOrDefault()?.duration?.text;

                double distanceInKm = double.Parse(distance?.Replace(" km", ""));
                double durationInMin = double.Parse(duration?.Replace(" mins", ""));

                double totalPrice = startPrice + (distanceInKm * pricePerKm) + (durationInMin * pricePerMin) + cykelTillæg + opbæringTillæg + lufthavnTillæg + passagerTillæg + liftvognTillæg + broTillæg;

                DistanceResult = distance != null ? $"afstand: {distance}, tid: {duration}, pris: {totalPrice} kr" : "";

                MapUrl = $"https://www.google.com/maps/embed/v1/directions?key=AIzaSyBH1LLJchXHqhquPfqwe8KUCcc2yu7HWG0&origin={AddressStart}&destination={AddressEnd}";

                Button = true;
            }
        }
    }
}